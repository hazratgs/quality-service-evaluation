import {
  SET_CATALOG,
  SET_CATEGORIES,
  SET_TYPES
} from '../constants/Catalog'

const initialState = {
  projectData: {
    'Образование': {
      _name: 'education',
      name: 'Образование',
      title: 'Образовательные учреждения'
    },
    'Культура': {
      _name: 'culture',
      name: 'Культура',
      title: 'Учреждения культуры'
    }
  },
  items: [],
  categories: [],
  types: [],
  issues: {
    'Образование': [
      'Доступность взаимодействия потребителей услуг с образовательным учреждением по телефону или электронной почте',
      'Наличие условий для посещения образовательного учреждения людьми с ограниченными возможностями',
      'Публикация наиболее важных вопросов и обращений на официальном сайте образовательного учреждения',
      'Уровень комфортности пребывания в образовательном учреждении (места для сидения, гардероб, чистота классных помещений)',
      'Транспортная и пешая доступность образовательного учреждения',
      'Наличие автотранспортных средств (автобуса), предназначенных для перевозки обучающихся',
      'Наличие охраны и системы видеонаблюдения',
      'Наличие физкультурного (спортивного, тренажерного) зала',
      'Наличие столовой или буфета с горячим питанием',
      'Удобство графика работы образовательного учреждения',
      'Доля получателей образовательных услуг, положительно оценивающих доброжелательность, вежливость работников образовательного учреждения, от общего числа опрошенных получателей образовательных услуг',
      'Доля получателей образовательных услуг, удовлетворенных компетентностью работников образовательного учреждения, от общего числа опрошенных получателей образовательных услуг',
      'Доля получателей образовательных услуг, удовлетворенных качеством предоставляемых образовательных услуг, от общего числа опрошенных получателей образовательных услуг',
      'Доля получателей образовательных услуг, удовлетворенных материально-техническим обеспечением учреждения, от общего числа опрошенных получателей образовательных услуг',
      'Доля получателей образовательных услуг, удовлетворенных организацией воспитательного процесса в образовательном учреждении, от общего числа опрошенных получателей образовательных услуг'
    ],
    'Культура': [
      'Информирование о новых мероприятиях',
      'Наличие условий для посещения культурно-досугового учреждения людьми с ограниченными возможностями',
      'Уровень комфортности пребывания в культурно-досуговом учреждении (места для сидения, гардероб, чистота помещений)',
      'Транспортная и пешая доступность культурно-досугового учреждения',
      'Удобство использования электронными сервисами, предоставляемыми культурно-досуговым учреждением посетителям (в том числе и с помощью мобильных устройств)',
      'Удобство графика работы культурно-досугового учреждения',
      'Доброжелательность, вежливость и компетентность персонала культурно-досугового учреждения',
      'Уровень удовлетворенности качеством оказания услуг культурно-досуговым учреждением в целом',
      'Разнообразие творческих групп, кружков по интересам',
      'Качество проведения культурно-массовых мероприятий'
    ],
    'Библиотека': [
      'Наличие информации о новых изданиях',
      'Доступность библиотеки для всех категорий пользователей',
      'Уровень комфортности пребывания в библиотеке (места для сидения, гардероб, чистота помещений)',
      'Транспортная и пешая доступность библиотеки',
      'Удобство использования электронными сервисами, предоставляемыми библиотекой посетителям (в том числе и с помощью мобильных устройств)',
      'Стоимость дополнительных услуг (ксерокопирование, заказ книги в другой библиотеке, информирование о возврате нужной книги, возможность отложить книгу)',
      'Удобство графика работы библиотеки',
      'Простота/удобство поиска необходимого издания',
      'Доброжелательность, вежливость и компетентность персонала библиотеки',
      'Уровень удовлетворенности качеством оказания услуг библиотекой в целом',
      'Наличие литературы, пользующейся спросом'
    ]
  }
}

export default function (state = initialState, action) {
  switch (action.type) {
    case SET_CATALOG:
      return { ...state, items: action.payload }

    case SET_CATEGORIES:
      return { ...state, categories: action.payload }

    case SET_TYPES:
      return { ...state, types: action.payload }

    default:
      return state
  }
}
